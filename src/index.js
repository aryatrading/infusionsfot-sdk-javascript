/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/Appointment', 'model/AppointmentList', 'model/AppointmentStatus', 'model/AppointmentStatusList', 'model/BasicContact', 'model/Campaign', 'model/CampaignList', 'model/CheckListItemDetails', 'model/Company', 'model/ContactList', 'model/ContactTag', 'model/ContactTagList', 'model/CustomFieldMetaData', 'model/CustomFieldOption', 'model/CustomFieldOptionItem', 'model/CustomFieldValue', 'model/EmailAddress', 'model/EntryLongString', 'model/FaxNumber', 'model/FullContact', 'model/Goal', 'model/HistoricalCounts', 'model/Item', 'model/Opportunity', 'model/OpportunityContact', 'model/OpportunityList', 'model/Order', 'model/OrderContactDetails', 'model/OrderItem', 'model/OrderList', 'model/PhoneNumber', 'model/Product', 'model/ProductList', 'model/ProductOption', 'model/ProductOptionValue', 'model/ProductStatus', 'model/ProductStatusList', 'model/Relationship', 'model/RestHook', 'model/RestHookRequest', 'model/SalesPipeline', 'model/Sequence', 'model/SequencePath', 'model/SetOfIds', 'model/ShippingInformation', 'model/SimpleOpportunityStage', 'model/SimpleProduct', 'model/SimpleTag', 'model/SimpleUser', 'model/StageDetails', 'model/SubscriptionPlan', 'model/TagId', 'model/Task', 'model/TaskList', 'model/TaskStatus', 'model/TaskStatusList', 'model/Transaction', 'model/TransactionList', 'model/UpsertContact', 'api/AppointmentApi', 'api/CampaignApi', 'api/ContactApi', 'api/ECommerceApi', 'api/OpportunityApi', 'api/ProductApi', 'api/RESTHooksApi', 'api/TaskApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Address'), require('./model/Appointment'), require('./model/AppointmentList'), require('./model/AppointmentStatus'), require('./model/AppointmentStatusList'), require('./model/BasicContact'), require('./model/Campaign'), require('./model/CampaignList'), require('./model/CheckListItemDetails'), require('./model/Company'), require('./model/ContactList'), require('./model/ContactTag'), require('./model/ContactTagList'), require('./model/CustomFieldMetaData'), require('./model/CustomFieldOption'), require('./model/CustomFieldOptionItem'), require('./model/CustomFieldValue'), require('./model/EmailAddress'), require('./model/EntryLongString'), require('./model/FaxNumber'), require('./model/FullContact'), require('./model/Goal'), require('./model/HistoricalCounts'), require('./model/Item'), require('./model/Opportunity'), require('./model/OpportunityContact'), require('./model/OpportunityList'), require('./model/Order'), require('./model/OrderContactDetails'), require('./model/OrderItem'), require('./model/OrderList'), require('./model/PhoneNumber'), require('./model/Product'), require('./model/ProductList'), require('./model/ProductOption'), require('./model/ProductOptionValue'), require('./model/ProductStatus'), require('./model/ProductStatusList'), require('./model/Relationship'), require('./model/RestHook'), require('./model/RestHookRequest'), require('./model/SalesPipeline'), require('./model/Sequence'), require('./model/SequencePath'), require('./model/SetOfIds'), require('./model/ShippingInformation'), require('./model/SimpleOpportunityStage'), require('./model/SimpleProduct'), require('./model/SimpleTag'), require('./model/SimpleUser'), require('./model/StageDetails'), require('./model/SubscriptionPlan'), require('./model/TagId'), require('./model/Task'), require('./model/TaskList'), require('./model/TaskStatus'), require('./model/TaskStatusList'), require('./model/Transaction'), require('./model/TransactionList'), require('./model/UpsertContact'), require('./api/AppointmentApi'), require('./api/CampaignApi'), require('./api/ContactApi'), require('./api/ECommerceApi'), require('./api/OpportunityApi'), require('./api/ProductApi'), require('./api/RESTHooksApi'), require('./api/TaskApi'));
  }
}(function(ApiClient, Address, Appointment, AppointmentList, AppointmentStatus, AppointmentStatusList, BasicContact, Campaign, CampaignList, CheckListItemDetails, Company, ContactList, ContactTag, ContactTagList, CustomFieldMetaData, CustomFieldOption, CustomFieldOptionItem, CustomFieldValue, EmailAddress, EntryLongString, FaxNumber, FullContact, Goal, HistoricalCounts, Item, Opportunity, OpportunityContact, OpportunityList, Order, OrderContactDetails, OrderItem, OrderList, PhoneNumber, Product, ProductList, ProductOption, ProductOptionValue, ProductStatus, ProductStatusList, Relationship, RestHook, RestHookRequest, SalesPipeline, Sequence, SequencePath, SetOfIds, ShippingInformation, SimpleOpportunityStage, SimpleProduct, SimpleTag, SimpleUser, StageDetails, SubscriptionPlan, TagId, Task, TaskList, TaskStatus, TaskStatusList, Transaction, TransactionList, UpsertContact, AppointmentApi, CampaignApi, ContactApi, ECommerceApi, OpportunityApi, ProductApi, RESTHooksApi, TaskApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var InfusionsoftRestApi = require('index'); // See note below*.
   * var xxxSvc = new InfusionsoftRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new InfusionsoftRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new InfusionsoftRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new InfusionsoftRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version V1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Appointment model constructor.
     * @property {module:model/Appointment}
     */
    Appointment: Appointment,
    /**
     * The AppointmentList model constructor.
     * @property {module:model/AppointmentList}
     */
    AppointmentList: AppointmentList,
    /**
     * The AppointmentStatus model constructor.
     * @property {module:model/AppointmentStatus}
     */
    AppointmentStatus: AppointmentStatus,
    /**
     * The AppointmentStatusList model constructor.
     * @property {module:model/AppointmentStatusList}
     */
    AppointmentStatusList: AppointmentStatusList,
    /**
     * The BasicContact model constructor.
     * @property {module:model/BasicContact}
     */
    BasicContact: BasicContact,
    /**
     * The Campaign model constructor.
     * @property {module:model/Campaign}
     */
    Campaign: Campaign,
    /**
     * The CampaignList model constructor.
     * @property {module:model/CampaignList}
     */
    CampaignList: CampaignList,
    /**
     * The CheckListItemDetails model constructor.
     * @property {module:model/CheckListItemDetails}
     */
    CheckListItemDetails: CheckListItemDetails,
    /**
     * The Company model constructor.
     * @property {module:model/Company}
     */
    Company: Company,
    /**
     * The ContactList model constructor.
     * @property {module:model/ContactList}
     */
    ContactList: ContactList,
    /**
     * The ContactTag model constructor.
     * @property {module:model/ContactTag}
     */
    ContactTag: ContactTag,
    /**
     * The ContactTagList model constructor.
     * @property {module:model/ContactTagList}
     */
    ContactTagList: ContactTagList,
    /**
     * The CustomFieldMetaData model constructor.
     * @property {module:model/CustomFieldMetaData}
     */
    CustomFieldMetaData: CustomFieldMetaData,
    /**
     * The CustomFieldOption model constructor.
     * @property {module:model/CustomFieldOption}
     */
    CustomFieldOption: CustomFieldOption,
    /**
     * The CustomFieldOptionItem model constructor.
     * @property {module:model/CustomFieldOptionItem}
     */
    CustomFieldOptionItem: CustomFieldOptionItem,
    /**
     * The CustomFieldValue model constructor.
     * @property {module:model/CustomFieldValue}
     */
    CustomFieldValue: CustomFieldValue,
    /**
     * The EmailAddress model constructor.
     * @property {module:model/EmailAddress}
     */
    EmailAddress: EmailAddress,
    /**
     * The EntryLongString model constructor.
     * @property {module:model/EntryLongString}
     */
    EntryLongString: EntryLongString,
    /**
     * The FaxNumber model constructor.
     * @property {module:model/FaxNumber}
     */
    FaxNumber: FaxNumber,
    /**
     * The FullContact model constructor.
     * @property {module:model/FullContact}
     */
    FullContact: FullContact,
    /**
     * The Goal model constructor.
     * @property {module:model/Goal}
     */
    Goal: Goal,
    /**
     * The HistoricalCounts model constructor.
     * @property {module:model/HistoricalCounts}
     */
    HistoricalCounts: HistoricalCounts,
    /**
     * The Item model constructor.
     * @property {module:model/Item}
     */
    Item: Item,
    /**
     * The Opportunity model constructor.
     * @property {module:model/Opportunity}
     */
    Opportunity: Opportunity,
    /**
     * The OpportunityContact model constructor.
     * @property {module:model/OpportunityContact}
     */
    OpportunityContact: OpportunityContact,
    /**
     * The OpportunityList model constructor.
     * @property {module:model/OpportunityList}
     */
    OpportunityList: OpportunityList,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The OrderContactDetails model constructor.
     * @property {module:model/OrderContactDetails}
     */
    OrderContactDetails: OrderContactDetails,
    /**
     * The OrderItem model constructor.
     * @property {module:model/OrderItem}
     */
    OrderItem: OrderItem,
    /**
     * The OrderList model constructor.
     * @property {module:model/OrderList}
     */
    OrderList: OrderList,
    /**
     * The PhoneNumber model constructor.
     * @property {module:model/PhoneNumber}
     */
    PhoneNumber: PhoneNumber,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The ProductList model constructor.
     * @property {module:model/ProductList}
     */
    ProductList: ProductList,
    /**
     * The ProductOption model constructor.
     * @property {module:model/ProductOption}
     */
    ProductOption: ProductOption,
    /**
     * The ProductOptionValue model constructor.
     * @property {module:model/ProductOptionValue}
     */
    ProductOptionValue: ProductOptionValue,
    /**
     * The ProductStatus model constructor.
     * @property {module:model/ProductStatus}
     */
    ProductStatus: ProductStatus,
    /**
     * The ProductStatusList model constructor.
     * @property {module:model/ProductStatusList}
     */
    ProductStatusList: ProductStatusList,
    /**
     * The Relationship model constructor.
     * @property {module:model/Relationship}
     */
    Relationship: Relationship,
    /**
     * The RestHook model constructor.
     * @property {module:model/RestHook}
     */
    RestHook: RestHook,
    /**
     * The RestHookRequest model constructor.
     * @property {module:model/RestHookRequest}
     */
    RestHookRequest: RestHookRequest,
    /**
     * The SalesPipeline model constructor.
     * @property {module:model/SalesPipeline}
     */
    SalesPipeline: SalesPipeline,
    /**
     * The Sequence model constructor.
     * @property {module:model/Sequence}
     */
    Sequence: Sequence,
    /**
     * The SequencePath model constructor.
     * @property {module:model/SequencePath}
     */
    SequencePath: SequencePath,
    /**
     * The SetOfIds model constructor.
     * @property {module:model/SetOfIds}
     */
    SetOfIds: SetOfIds,
    /**
     * The ShippingInformation model constructor.
     * @property {module:model/ShippingInformation}
     */
    ShippingInformation: ShippingInformation,
    /**
     * The SimpleOpportunityStage model constructor.
     * @property {module:model/SimpleOpportunityStage}
     */
    SimpleOpportunityStage: SimpleOpportunityStage,
    /**
     * The SimpleProduct model constructor.
     * @property {module:model/SimpleProduct}
     */
    SimpleProduct: SimpleProduct,
    /**
     * The SimpleTag model constructor.
     * @property {module:model/SimpleTag}
     */
    SimpleTag: SimpleTag,
    /**
     * The SimpleUser model constructor.
     * @property {module:model/SimpleUser}
     */
    SimpleUser: SimpleUser,
    /**
     * The StageDetails model constructor.
     * @property {module:model/StageDetails}
     */
    StageDetails: StageDetails,
    /**
     * The SubscriptionPlan model constructor.
     * @property {module:model/SubscriptionPlan}
     */
    SubscriptionPlan: SubscriptionPlan,
    /**
     * The TagId model constructor.
     * @property {module:model/TagId}
     */
    TagId: TagId,
    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task: Task,
    /**
     * The TaskList model constructor.
     * @property {module:model/TaskList}
     */
    TaskList: TaskList,
    /**
     * The TaskStatus model constructor.
     * @property {module:model/TaskStatus}
     */
    TaskStatus: TaskStatus,
    /**
     * The TaskStatusList model constructor.
     * @property {module:model/TaskStatusList}
     */
    TaskStatusList: TaskStatusList,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The TransactionList model constructor.
     * @property {module:model/TransactionList}
     */
    TransactionList: TransactionList,
    /**
     * The UpsertContact model constructor.
     * @property {module:model/UpsertContact}
     */
    UpsertContact: UpsertContact,
    /**
     * The AppointmentApi service constructor.
     * @property {module:api/AppointmentApi}
     */
    AppointmentApi: AppointmentApi,
    /**
     * The CampaignApi service constructor.
     * @property {module:api/CampaignApi}
     */
    CampaignApi: CampaignApi,
    /**
     * The ContactApi service constructor.
     * @property {module:api/ContactApi}
     */
    ContactApi: ContactApi,
    /**
     * The ECommerceApi service constructor.
     * @property {module:api/ECommerceApi}
     */
    ECommerceApi: ECommerceApi,
    /**
     * The OpportunityApi service constructor.
     * @property {module:api/OpportunityApi}
     */
    OpportunityApi: OpportunityApi,
    /**
     * The ProductApi service constructor.
     * @property {module:api/ProductApi}
     */
    ProductApi: ProductApi,
    /**
     * The RESTHooksApi service constructor.
     * @property {module:api/RESTHooksApi}
     */
    RESTHooksApi: RESTHooksApi,
    /**
     * The TaskApi service constructor.
     * @property {module:api/TaskApi}
     */
    TaskApi: TaskApi
  };

  return exports;
}));
