/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InfusionsoftRestApi);
  }
}(this, function(expect, InfusionsoftRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Product', function() {
      beforeEach(function() {
        instance = new InfusionsoftRestApi.Product();
      });

      it('should create an instance of Product', function() {
        // TODO: update the code to test Product
        expect(instance).to.be.a(InfusionsoftRestApi.Product);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property productDesc (base name: "product_desc")', function() {
        // TODO: update the code to test the property productDesc
        expect(instance).to.have.property('productDesc');
        // expect(instance.productDesc).to.be(expectedValueLiteral);
      });

      it('should have the property productName (base name: "product_name")', function() {
        // TODO: update the code to test the property productName
        expect(instance).to.have.property('productName');
        // expect(instance.productName).to.be(expectedValueLiteral);
      });

      it('should have the property productOptions (base name: "product_options")', function() {
        // TODO: update the code to test the property productOptions
        expect(instance).to.have.property('productOptions');
        // expect(instance.productOptions).to.be(expectedValueLiteral);
      });

      it('should have the property productPrice (base name: "product_price")', function() {
        // TODO: update the code to test the property productPrice
        expect(instance).to.have.property('productPrice');
        // expect(instance.productPrice).to.be(expectedValueLiteral);
      });

      it('should have the property productShortDesc (base name: "product_short_desc")', function() {
        // TODO: update the code to test the property productShortDesc
        expect(instance).to.have.property('productShortDesc');
        // expect(instance.productShortDesc).to.be(expectedValueLiteral);
      });

      it('should have the property sku (base name: "sku")', function() {
        // TODO: update the code to test the property sku
        expect(instance).to.have.property('sku');
        // expect(instance.sku).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property subCategoryId (base name: "sub_category_id")', function() {
        // TODO: update the code to test the property subCategoryId
        expect(instance).to.have.property('subCategoryId');
        // expect(instance.subCategoryId).to.be(expectedValueLiteral);
      });

      it('should have the property subscriptionOnly (base name: "subscription_only")', function() {
        // TODO: update the code to test the property subscriptionOnly
        expect(instance).to.have.property('subscriptionOnly');
        // expect(instance.subscriptionOnly).to.be(expectedValueLiteral);
      });

      it('should have the property subscriptionPlans (base name: "subscription_plans")', function() {
        // TODO: update the code to test the property subscriptionPlans
        expect(instance).to.have.property('subscriptionPlans');
        // expect(instance.subscriptionPlans).to.be(expectedValueLiteral);
      });

      it('should have the property url (base name: "url")', function() {
        // TODO: update the code to test the property url
        expect(instance).to.have.property('url');
        // expect(instance.url).to.be(expectedValueLiteral);
      });

    });
  });

}));
