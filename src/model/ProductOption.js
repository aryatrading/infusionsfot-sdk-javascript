/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProductOptionValue'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProductOptionValue'));
  } else {
    // Browser globals (root is window)
    if (!root.InfusionsoftRestApi) {
      root.InfusionsoftRestApi = {};
    }
    root.InfusionsoftRestApi.ProductOption = factory(root.InfusionsoftRestApi.ApiClient, root.InfusionsoftRestApi.ProductOptionValue);
  }
}(this, function(ApiClient, ProductOptionValue) {
  'use strict';

  /**
   * The ProductOption model module.
   * @module model/ProductOption
   * @version V1.0
   */

  /**
   * Constructs a new <code>ProductOption</code>.
   * @alias module:model/ProductOption
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ProductOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProductOption} obj Optional instance to populate.
   * @return {module:model/ProductOption} The populated <code>ProductOption</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('allow_spaces'))
        obj.allowSpaces = ApiClient.convertToType(data['allow_spaces'], 'Boolean');
      if (data.hasOwnProperty('can_contain_character'))
        obj.canContainCharacter = ApiClient.convertToType(data['can_contain_character'], 'Boolean');
      if (data.hasOwnProperty('can_contain_number'))
        obj.canContainNumber = ApiClient.convertToType(data['can_contain_number'], 'Boolean');
      if (data.hasOwnProperty('can_end_with_character'))
        obj.canEndWithCharacter = ApiClient.convertToType(data['can_end_with_character'], 'Boolean');
      if (data.hasOwnProperty('can_end_with_number'))
        obj.canEndWithNumber = ApiClient.convertToType(data['can_end_with_number'], 'Boolean');
      if (data.hasOwnProperty('can_start_with_character'))
        obj.canStartWithCharacter = ApiClient.convertToType(data['can_start_with_character'], 'Boolean');
      if (data.hasOwnProperty('can_start_with_number'))
        obj.canStartWithNumber = ApiClient.convertToType(data['can_start_with_number'], 'Boolean');
      if (data.hasOwnProperty('display_index'))
        obj.displayIndex = ApiClient.convertToType(data['display_index'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('max_chars'))
        obj.maxChars = ApiClient.convertToType(data['max_chars'], 'Number');
      if (data.hasOwnProperty('min_chars'))
        obj.minChars = ApiClient.convertToType(data['min_chars'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('required'))
        obj.required = ApiClient.convertToType(data['required'], 'Boolean');
      if (data.hasOwnProperty('text_message'))
        obj.textMessage = ApiClient.convertToType(data['text_message'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('values'))
        obj.values = ApiClient.convertToType(data['values'], [ProductOptionValue]);
    }
    return obj;
  }

  /**
   * @member {Boolean} allowSpaces
   */
  exports.prototype.allowSpaces = undefined;

  /**
   * @member {Boolean} canContainCharacter
   */
  exports.prototype.canContainCharacter = undefined;

  /**
   * @member {Boolean} canContainNumber
   */
  exports.prototype.canContainNumber = undefined;

  /**
   * @member {Boolean} canEndWithCharacter
   */
  exports.prototype.canEndWithCharacter = undefined;

  /**
   * @member {Boolean} canEndWithNumber
   */
  exports.prototype.canEndWithNumber = undefined;

  /**
   * @member {Boolean} canStartWithCharacter
   */
  exports.prototype.canStartWithCharacter = undefined;

  /**
   * @member {Boolean} canStartWithNumber
   */
  exports.prototype.canStartWithNumber = undefined;

  /**
   * @member {Number} displayIndex
   */
  exports.prototype.displayIndex = undefined;

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} label
   */
  exports.prototype.label = undefined;

  /**
   * @member {Number} maxChars
   */
  exports.prototype.maxChars = undefined;

  /**
   * @member {Number} minChars
   */
  exports.prototype.minChars = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {Boolean} required
   */
  exports.prototype.required = undefined;

  /**
   * @member {String} textMessage
   */
  exports.prototype.textMessage = undefined;

  /**
   * @member {module:model/ProductOption.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * @member {Array.<module:model/ProductOptionValue>} values
   */
  exports.prototype.values = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "FixedList"
     * @const
     */
    fixedList: "FixedList",

    /**
     * value: "Variable"
     * @const
     */
    variable: "Variable"
  };

  return exports;

}));
