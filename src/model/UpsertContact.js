/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/Company', 'model/CustomFieldValue', 'model/EmailAddress', 'model/FaxNumber', 'model/PhoneNumber', 'model/Relationship'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Address'), require('./Company'), require('./CustomFieldValue'), require('./EmailAddress'), require('./FaxNumber'), require('./PhoneNumber'), require('./Relationship'));
  } else {
    // Browser globals (root is window)
    if (!root.InfusionsoftRestApi) {
      root.InfusionsoftRestApi = {};
    }
    root.InfusionsoftRestApi.UpsertContact = factory(root.InfusionsoftRestApi.ApiClient, root.InfusionsoftRestApi.Address, root.InfusionsoftRestApi.Company, root.InfusionsoftRestApi.CustomFieldValue, root.InfusionsoftRestApi.EmailAddress, root.InfusionsoftRestApi.FaxNumber, root.InfusionsoftRestApi.PhoneNumber, root.InfusionsoftRestApi.Relationship);
  }
}(this, function(ApiClient, Address, Company, CustomFieldValue, EmailAddress, FaxNumber, PhoneNumber, Relationship) {
  'use strict';

  /**
   * The UpsertContact model module.
   * @module model/UpsertContact
   * @version V1.0
   */

  /**
   * Constructs a new <code>UpsertContact</code>.
   * @alias module:model/UpsertContact
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>UpsertContact</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpsertContact} obj Optional instance to populate.
   * @return {module:model/UpsertContact} The populated <code>UpsertContact</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('addresses'))
        obj.addresses = ApiClient.convertToType(data['addresses'], [Address]);
      if (data.hasOwnProperty('birthday'))
        obj.birthday = ApiClient.convertToType(data['birthday'], 'Date');
      if (data.hasOwnProperty('company'))
        obj.company = Company.constructFromObject(data['company']);
      if (data.hasOwnProperty('contact_type'))
        obj.contactType = ApiClient.convertToType(data['contact_type'], 'String');
      if (data.hasOwnProperty('custom_fields'))
        obj.customFields = ApiClient.convertToType(data['custom_fields'], [CustomFieldValue]);
      if (data.hasOwnProperty('date_created'))
        obj.dateCreated = ApiClient.convertToType(data['date_created'], 'Date');
      if (data.hasOwnProperty('duplicate_option'))
        obj.duplicateOption = ApiClient.convertToType(data['duplicate_option'], 'String');
      if (data.hasOwnProperty('email_addresses'))
        obj.emailAddresses = ApiClient.convertToType(data['email_addresses'], [EmailAddress]);
      if (data.hasOwnProperty('family_name'))
        obj.familyName = ApiClient.convertToType(data['family_name'], 'String');
      if (data.hasOwnProperty('fax_numbers'))
        obj.faxNumbers = ApiClient.convertToType(data['fax_numbers'], [FaxNumber]);
      if (data.hasOwnProperty('given_name'))
        obj.givenName = ApiClient.convertToType(data['given_name'], 'String');
      if (data.hasOwnProperty('job_title'))
        obj.jobTitle = ApiClient.convertToType(data['job_title'], 'String');
      if (data.hasOwnProperty('last_updated'))
        obj.lastUpdated = ApiClient.convertToType(data['last_updated'], 'Date');
      if (data.hasOwnProperty('lead_source_id'))
        obj.leadSourceId = ApiClient.convertToType(data['lead_source_id'], 'Number');
      if (data.hasOwnProperty('middle_name'))
        obj.middleName = ApiClient.convertToType(data['middle_name'], 'String');
      if (data.hasOwnProperty('notes'))
        obj.notes = ApiClient.convertToType(data['notes'], 'String');
      if (data.hasOwnProperty('opt_in_reason'))
        obj.optInReason = ApiClient.convertToType(data['opt_in_reason'], 'String');
      if (data.hasOwnProperty('owner_id'))
        obj.ownerId = ApiClient.convertToType(data['owner_id'], 'Number');
      if (data.hasOwnProperty('phone_numbers'))
        obj.phoneNumbers = ApiClient.convertToType(data['phone_numbers'], [PhoneNumber]);
      if (data.hasOwnProperty('preferred_locale'))
        obj.preferredLocale = ApiClient.convertToType(data['preferred_locale'], 'String');
      if (data.hasOwnProperty('preferred_name'))
        obj.preferredName = ApiClient.convertToType(data['preferred_name'], 'String');
      if (data.hasOwnProperty('prefix'))
        obj.prefix = ApiClient.convertToType(data['prefix'], 'String');
      if (data.hasOwnProperty('relationships'))
        obj.relationships = ApiClient.convertToType(data['relationships'], [Relationship]);
      if (data.hasOwnProperty('source_type'))
        obj.sourceType = ApiClient.convertToType(data['source_type'], 'String');
      if (data.hasOwnProperty('suffix'))
        obj.suffix = ApiClient.convertToType(data['suffix'], 'String');
      if (data.hasOwnProperty('tag_ids'))
        obj.tagIds = ApiClient.convertToType(data['tag_ids'], ['Number']);
      if (data.hasOwnProperty('time_zone'))
        obj.timeZone = ApiClient.convertToType(data['time_zone'], 'String');
      if (data.hasOwnProperty('website'))
        obj.website = ApiClient.convertToType(data['website'], 'String');
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/Address>} addresses
   */
  exports.prototype.addresses = undefined;

  /**
   * @member {Date} birthday
   */
  exports.prototype.birthday = undefined;

  /**
   * @member {module:model/Company} company
   */
  exports.prototype.company = undefined;

  /**
   * @member {String} contactType
   */
  exports.prototype.contactType = undefined;

  /**
   * @member {Array.<module:model/CustomFieldValue>} customFields
   */
  exports.prototype.customFields = undefined;

  /**
   * @member {Date} dateCreated
   */
  exports.prototype.dateCreated = undefined;

  /**
   * @member {module:model/UpsertContact.DuplicateOptionEnum} duplicateOption
   */
  exports.prototype.duplicateOption = undefined;

  /**
   * @member {Array.<module:model/EmailAddress>} emailAddresses
   */
  exports.prototype.emailAddresses = undefined;

  /**
   * @member {String} familyName
   */
  exports.prototype.familyName = undefined;

  /**
   * @member {Array.<module:model/FaxNumber>} faxNumbers
   */
  exports.prototype.faxNumbers = undefined;

  /**
   * @member {String} givenName
   */
  exports.prototype.givenName = undefined;

  /**
   * @member {String} jobTitle
   */
  exports.prototype.jobTitle = undefined;

  /**
   * @member {Date} lastUpdated
   */
  exports.prototype.lastUpdated = undefined;

  /**
   * @member {Number} leadSourceId
   */
  exports.prototype.leadSourceId = undefined;

  /**
   * @member {String} middleName
   */
  exports.prototype.middleName = undefined;

  /**
   * @member {String} notes
   */
  exports.prototype.notes = undefined;

  /**
   * @member {String} optInReason
   */
  exports.prototype.optInReason = undefined;

  /**
   * @member {Number} ownerId
   */
  exports.prototype.ownerId = undefined;

  /**
   * @member {Array.<module:model/PhoneNumber>} phoneNumbers
   */
  exports.prototype.phoneNumbers = undefined;

  /**
   * @member {String} preferredLocale
   */
  exports.prototype.preferredLocale = undefined;

  /**
   * @member {String} preferredName
   */
  exports.prototype.preferredName = undefined;

  /**
   * @member {String} prefix
   */
  exports.prototype.prefix = undefined;

  /**
   * @member {Array.<module:model/Relationship>} relationships
   */
  exports.prototype.relationships = undefined;

  /**
   * @member {module:model/UpsertContact.SourceTypeEnum} sourceType
   */
  exports.prototype.sourceType = undefined;

  /**
   * @member {String} suffix
   */
  exports.prototype.suffix = undefined;

  /**
   * @member {Array.<Number>} tagIds
   */
  exports.prototype.tagIds = undefined;

  /**
   * @member {String} timeZone
   */
  exports.prototype.timeZone = undefined;

  /**
   * @member {String} website
   */
  exports.prototype.website = undefined;


  /**
   * Allowed values for the <code>duplicateOption</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DuplicateOptionEnum = {
    /**
     * value: "Email"
     * @const
     */
    email: "Email",

    /**
     * value: "EmailAndName"
     * @const
     */
    emailAndName: "EmailAndName"
  };


  /**
   * Allowed values for the <code>sourceType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SourceTypeEnum = {
    /**
     * value: "WEBFORM"
     * @const
     */
    WEBFORM: "WEBFORM",

    /**
     * value: "LANDINGPAGE"
     * @const
     */
    LANDINGPAGE: "LANDINGPAGE",

    /**
     * value: "IMPORT"
     * @const
     */
    IMPORT: "IMPORT",

    /**
     * value: "MANUAL"
     * @const
     */
    MANUAL: "MANUAL",

    /**
     * value: "API"
     * @const
     */
    API: "API",

    /**
     * value: "OTHER"
     * @const
     */
    OTHER: "OTHER",

    /**
     * value: "UNKNOWN"
     * @const
     */
    UNKNOWN: "UNKNOWN"
  };

  return exports;

}));
