/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.InfusionsoftRestApi) {
      root.InfusionsoftRestApi = {};
    }
    root.InfusionsoftRestApi.Address = factory(root.InfusionsoftRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Address model module.
   * @module model/Address
   * @version V1.0
   */

  /**
   * Constructs a new <code>Address</code>.
   * @alias module:model/Address
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Address} obj Optional instance to populate.
   * @return {module:model/Address} The populated <code>Address</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('country_code'))
        obj.countryCode = ApiClient.convertToType(data['country_code'], 'String');
      if (data.hasOwnProperty('field'))
        obj.field = ApiClient.convertToType(data['field'], 'String');
      if (data.hasOwnProperty('line1'))
        obj.line1 = ApiClient.convertToType(data['line1'], 'String');
      if (data.hasOwnProperty('line2'))
        obj.line2 = ApiClient.convertToType(data['line2'], 'String');
      if (data.hasOwnProperty('locality'))
        obj.locality = ApiClient.convertToType(data['locality'], 'String');
      if (data.hasOwnProperty('postal_code'))
        obj.postalCode = ApiClient.convertToType(data['postal_code'], 'String');
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} countryCode
   */
  exports.prototype.countryCode = undefined;

  /**
   * @member {module:model/Address.FieldEnum} field
   */
  exports.prototype.field = undefined;

  /**
   * @member {String} line1
   */
  exports.prototype.line1 = undefined;

  /**
   * @member {String} line2
   */
  exports.prototype.line2 = undefined;

  /**
   * @member {String} locality
   */
  exports.prototype.locality = undefined;

  /**
   * @member {String} postalCode
   */
  exports.prototype.postalCode = undefined;

  /**
   * @member {String} region
   */
  exports.prototype.region = undefined;


  /**
   * Allowed values for the <code>field</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FieldEnum = {
    /**
     * value: "BILLING"
     * @const
     */
    BILLING: "BILLING",

    /**
     * value: "SHIPPING"
     * @const
     */
    SHIPPING: "SHIPPING",

    /**
     * value: "OTHER"
     * @const
     */
    OTHER: "OTHER"
  };

  return exports;

}));
